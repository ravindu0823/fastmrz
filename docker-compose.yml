version: '3.8'

services:
  fastmrz-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastmrz-api
    ports:
      - "8000:8000"
    environment:
      - TESSDATA_PREFIX=/app/tessdata
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      # Mount tessdata for development (optional)
      - ./tessdata:/app/tessdata:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fastmrz-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: fastmrz-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Add SSL certificates here if needed
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fastmrz-api
    restart: unless-stopped
    networks:
      - fastmrz-network
    profiles:
      - production

networks:
  fastmrz-network:
    driver: bridge

volumes:
  tessdata:
    driver: local
